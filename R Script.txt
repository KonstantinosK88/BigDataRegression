##////////////////////////////////////////////////////////////////////////////
## Big Data Regression: Computational Techniques Execution Time Comparison
##\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\
## Packages to install.
#install.packages("biglm")
#install.packages("fastmatch")
#install.packages("C:/Users/30697/Desktop/bit_1.1-15.2.tar.gz", type = "source", repos = NULL)
#install.packages("C:/Users/30697/Desktop/ff_2.2-14.2.tar.gz", type = "source", repos = NULL)
#install.packages("C:/Users/30697/Desktop/ffbase_0.12.8.tar.gz", type = "source", repos = NULL)

## Libraries to load.
library(biglm)
library(fastmatch)
library(bit)
library(ff)
library(ffbase)


################################################
## Create a synthetic dataset.
##==============================================
#set.seed(3622007) # replace am with your AM
#p <- rpois(1, lambda = 120)
#n <- 2000000
#b <- rt(p, df = 5)
#outFile <- "big_data_regression.csv"
#zz <- file(outFile, "w")
#colNames <- c("y", paste0("x", 1:(p-1)))
#colNames <- paste0(colNames, collapse=",")
#cat(colNames, "\n", file = zz)
#for (i in 1:n){
#  x <- matrix(rnorm(p-1), nrow = 1)
#  y <- b[1] + x %*% b[-1] + rnorm(1)
#  xy <- cbind(y, x)
#  cat(paste0(xy, collapse = ","), file = zz, append=TRUE,"\n")
# if( i %% 100000 == 0){
#  cat(paste0("write to file ",outFile, " line: ", i), "\n")
# }
#}
#close(zz)
################################################



##=====================================================
## Estimating Coefficients, using the "ffbase" library.
##=====================================================
## Read the data w/o loading it into R:
brgdata <- read.csv.ffdf(file = "C:\\Users\\30697\\Desktop\\big_data_regression.csv", header=TRUE)
dim(brgdata)
names(brgdata)

##----------------------------------------------
## Fit our model and get summary statistics:
##----------------------------------------------
myFormula <- paste0('x',1:115, collapse=' + ')
myFormula <- paste0('y ~ ', myFormula, collapse = '')
start.time.bigglm <- Sys.time()
fit <- bigglm.ffdf(as.formula(myFormula), data=brgdata, chunksize = 5000, sandwich = FALSE)
end.time.bigglm <- Sys.time()
summary(fit)



##================================================
## Estimating Coefficients, using the RLS Method.
##================================================
## Initial Values:
start.time.RLS <- Sys.time()
X0 <- cbind(rep(1,5000), as.matrix(brgdata[1:5000,-1]))
y0 <- brgdata[1:5000,1]
X1 <- cbind(rep(1,5000), as.matrix(brgdata[5001:10000,-1]))
y1 <- brgdata[5001:10000,1]
L0 <- t(X0)%*%X0+t(X1)%*%X1
R0 <- t(X0)%*%y0+t(X1)%*%y1


## For loop for Left and Right hand side:
for (i in 3:400) {
    X2 <- cbind(rep(1,5000), as.matrix(brgdata[((i*nrow(X0))-(nrow(X0)-1)):(i*nrow(X0)),-1]))
    y2 <- brgdata[((i*nrow(X0))-(nrow(X0)-1)):(i*nrow(X0)),1]
    L <- L0 + t(X2)%*%X2
    R <- R0 + t(X2)%*%y2
    L0 <- L
    R0 <- R
}

## Recursive Least Squares (RLS):
RLS <- solve(L)%*%R
end.time.RLS <- Sys.time()


##----------------------------------------------
## Comparing the two methods:
##----------------------------------------------
## Results:
comparison <- cbind(coef(fit), RLS)
colnames(comparison) <- c("BigGLM Method", "RLS Method")
comparison

## Time:
end.time.bigglm-start.time.bigglm
end.time.RLS-start.time.RLS



##==============================================
## Estimating Coefficients, using Meta-Analysis.
##==============================================
## An initial sample of 5000 values:
start.time.meta <- Sys.time()
my.sample <- brgdata[sample(nrow(brgdata), 5000), ]
f <- lm(y~., data=my.sample)
b <- coefficients(f)
w <- 1/((summary(f)$coefficients[,2])^2)
wb <- w*b

for (i in 2:100) {
 my.sample <- brgdata[sample(nrow(brgdata), 5000), ]
 f <- lm(y~., data=my.sample)
 b1 <- coefficients(f)
 w1 <- 1/((summary(f)$coefficients[,2])^2)
 wb1 <- w1*b1

 wb <- wb + wb1
 w <- w + w1
}

meta.analysis <- wb/w
end.time.meta <- Sys.time()


##----------------------------------------------
## Comparing all three methods:
##----------------------------------------------
## Results:
comparison <- cbind(comparison, meta.analysis)
colnames(comparison) <- c("BigGLM Method", "RLS Method", "Meta-Analysis")
comparison

## Time:
end.time.bigglm-start.time.bigglm
end.time.RLS-start.time.RLS
end.time.meta-start.time.meta

################################################
## Self-destruct button:
#rm(list=ls());
#gc();
################################################